//
// Prefix header for all source files of the 'Modular' target in the 'Modular' project.
//




typedef enum {

  
    MAT_CondRetFaltouMemoria = 0, // FALTOU MEMORIA
  
    MAT_CondRetOK = 1 , // RETORNO OK!
  
    MAT_CondRetFalhou = 2 // RETORNO NAO OK!
  
  
}MAT_tpCondRet;


typedef struct tpMatriz TpMatriz;


// CRIAR MATRIZ
MAT_tpCondRet MAT_CriarMatriz( TpMatriz* matriz, int linhas, int colunas );


// INSERIR NOVO ELEMENTO NA MATRIZ
MAT_tpCondRet MAT_InserirNovoElemento(TpMatriz* matriz, *TpNoLista novo);


// MAPEAR POSICAO a(ij) DO ELEMENTO DADO
MAT_tpCondRet MAT_ObterElemento( TpMatriz* matriz, *TpNoLista pos_procurada, int* i, int* j);


// BUSCAR O ELEMENTO A PARTIR DA SUA POSICAO a(ij) DADA
MAT_tpCondRet MAT_ObterElemento( TpMatriz* matriz, *TpNoLista elem_procurado, int i, int j);


// SUBSTITUIR (ALTERAR) ELEMENTO
MAT_tpCondRet MAT_AlterarValor( TpMatriz* matriz, *TpNoLista elem_substituto, int i, int j);

// DESTRUIR MATRIZ
MAT_tpCondRet MAT_DestruirMatriz( TpMatriz* matriz);
